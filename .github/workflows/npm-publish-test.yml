name: NPM Publish Test (Dry Run)

on:
  push:
    branches:
      - main

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      should_publish: ${{ steps.version-check.outputs.should_publish }}
      current_version: ${{ steps.version-check.outputs.current_version }}
      package_changed: ${{ steps.changes.outputs.package_changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for package changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          predicate-quantifier: "every"
          filters: |
            package_changed:
              - 'packages/test-package/**'
              - '!packages/test-package/test/**'
              - '!packages/test-package/__tests__/**'
              - '!packages/test-package/**/*.test.*'
              - '!packages/test-package/**/*.spec.*'
              - '!packages/test-package/**/*.md'
              - '!packages/test-package/.gitignore'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          package_json_file: packages/package.json

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"
          cache-dependency-path: "packages/pnpm-lock.yaml"

      - name: Install dependencies
        run: |
          cd packages
          pnpm install

      - name: Check version against npm registry
        id: version-check
        run: |
          cd packages/test-package
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          PACKAGE_NAME=$(node -p "require('./package.json').name")

          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

          # Check if this version exists on npm
          if npm view "$PACKAGE_NAME@$CURRENT_VERSION" version 2>/dev/null; then
            echo "Version $CURRENT_VERSION already exists on npm"
            SHOULD_PUBLISH=false
          else
            echo "Version $CURRENT_VERSION does not exist on npm"
            SHOULD_PUBLISH=true
          fi

          echo "should_publish=$SHOULD_PUBLISH" >> $GITHUB_OUTPUT
          echo "Should publish: $SHOULD_PUBLISH"

  npm-publish-dry-run:
    needs: check-version
    # HARDCODED to never run - this is a test workflow
    if: false
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          package_json_file: packages/package.json

      - name: Setup Node.js with npm registry
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          cache: "pnpm"
          cache-dependency-path: "packages/pnpm-lock.yaml"

      - name: Install dependencies
        run: |
          cd packages
          pnpm install

      - name: Build package
        run: |
          cd packages/test-package
          pnpm build

      - name: Run linting
        run: |
          cd packages/test-package
          pnpm lint

      - name: Ensure npm version 11.5.1+
        run: |
          npm install -g npm@latest
          npm --version

      - name: Publish to npm (DRY RUN - would be disabled)
        run: |
          cd packages/test-package
          echo "Would run: npm publish --access public"
          echo "This step is disabled for testing"

  validation-summary:
    needs: check-version
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Display workflow validation results
        run: |
          echo "=== Workflow Validation Summary ==="
          echo "Package changed: ${{ needs.check-version.outputs.package_changed }}"
          echo "Should publish: ${{ needs.check-version.outputs.should_publish }}"
          echo "Current version: ${{ needs.check-version.outputs.current_version }}"
          echo ""
          echo "✓ Workflow structure validated"
          echo "✓ Path filters tested"
          echo "✓ pnpm workspace setup verified"
          echo ""
          echo "NOTE: npm publish is hardcoded to never run (if: false)"
